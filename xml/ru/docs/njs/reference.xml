<?xml version="1.0"?>

<!--
  Copyright (C) Nginx, Inc.
  -->

<!DOCTYPE article SYSTEM "../../../../dtd/article.dtd">

<article name="Справочник"
        link="/ru/docs/njs/reference.html"
        lang="ru"
        rev="1">

<section id="summary">

<para>
<link doc="index.xml">njs</link> предоставляет объекты, методы и свойства
для расширения функциональности nginx.
</para>

</section>


<section id="http" name="HTTP">

<para>
Объект <literal>HTTP</literal> доступен только в
модуле <link doc="../http/ngx_http_js_module.xml">ngx_http_js_module</link>.
Все строки в объекте <literal>HTTP</literal> являются
<link id="strings">байтовыми строками</link>.
</para>


<section id="http_request" name="Запрос">

<para>
<list type="tag">

<tag-name><literal>r.args{}</literal></tag-name>
<tag-desc>
объект аргументов запроса, только чтение
</tag-desc>

<tag-name><literal>r.error(<value>строка</value>)</literal></tag-name>
<tag-desc>
записывает <literal>строку</literal> в лог-файл ошибок
на уровне лога <literal>error</literal>
</tag-desc>

<tag-name><literal>r.finish()</literal></tag-name>
<tag-desc>
завершает отправку ответа клиенту
</tag-desc>

<tag-name><literal>r.headersIn{}</literal></tag-name>
<tag-desc>
объект исходящих заголовков, только чтение.
<para>
Например, доступ к заголовку <literal>Header-Name</literal>
можно получить при помощи синтаксиса <literal>headers['Header-Name']</literal>
или <literal>headers.Header_name</literal>
</para>
</tag-desc>

<tag-name><literal>r.headersOut{}</literal></tag-name>
<tag-desc>
объект исходящих заголовков, доступно для записи.
<para>
Например, доступ к заголовку <literal>Header-Name</literal>
можно получить при помощи синтаксиса <literal>headers['Header-Name']</literal>
или <literal>headers.Header_name</literal>
</para>
</tag-desc>

<tag-name><literal>r.httpVersion</literal></tag-name>
<tag-desc>
версия HTTP, только чтение
</tag-desc>

<tag-name><literal>r.log(<value>строка</value>)</literal></tag-name>
<tag-desc>
записывает <literal>строку</literal> в лог-файл ошибок
на уровне лога <literal>info</literal>
</tag-desc>

<tag-name><literal>r.method</literal></tag-name>
<tag-desc>
HTTP метод, только чтение
</tag-desc>

<tag-name><literal>r.parent</literal></tag-name>
<tag-desc>
ссылается на родительский объект запроса
</tag-desc>

<tag-name><literal>r.remoteAddress</literal></tag-name>
<tag-desc>
адрес клиента, только чтение
</tag-desc>

<tag-name><literal>r.requestBody</literal></tag-name>
<tag-desc>
хранит тело запроса, только чтение
</tag-desc>

<tag-name><literal>r.responseBody</literal></tag-name>
<tag-desc>
хранит тело ответа <link id="subrequest">подзапроса</link>, только чтение
</tag-desc>

<tag-name><literal>r.return(код[, строка])</literal></tag-name>
<tag-desc>
отправляет
клиенту полный ответ с указанным <literal>кодом</literal>
<para>
Можно задать или URL перенаправления
(для кодов 301, 302, 303, 307 и 308),
или текст тела ответа (для остальных кодов) в качестве второго аргумента
</para>
</tag-desc>

<tag-name><literal>r.send(<value>строка</value>)</literal></tag-name>
<tag-desc>
отправляет часть тела ответа клиенту
</tag-desc>

<tag-name><literal>r.sendHeader()</literal></tag-name>
<tag-desc>
отправляет заголовок HTTP клиенту
</tag-desc>

<tag-name><literal>r.status</literal></tag-name>
<tag-desc>
статус, доступно для записи
</tag-desc>

<tag-name><literal>req.variables{}</literal></tag-name>
<tag-desc>
объект переменных nginx, только чтение
</tag-desc>

<tag-name><literal>r.warn(<value>строка</value>)</literal></tag-name>
<tag-desc>
записывает <literal>строку</literal> в лог-файл ошибок
на уровне лога <literal>warning</literal>
</tag-desc>

<tag-name><literal>r.uri</literal></tag-name>
<tag-desc>
текущий URI, только чтение
</tag-desc>

<tag-name id="subrequest"><literal>r.subrequest(<value>uri</value>[,
<value>options</value>[, <value>callback</value>]])</literal></tag-name>
<tag-desc>
создаёт подзапрос с заданными <literal>uri</literal> и
<literal>options</literal> и
устанавливает необязательный <literal>callback</literal> завершения.

<para>
Если <literal>options</literal> является строкой, то в ней
содержится срока аргументов подзапроса.
В противном случае ожидается, что <literal>options</literal> является объектом
со следующими ключами:

<list type="tag">
<tag-name><literal>args</literal></tag-name>
<tag-desc>
строка с аргументами
</tag-desc>

<tag-name><literal>body</literal></tag-name>
<tag-desc>
тело запроса
</tag-desc>

<tag-name><literal>method</literal></tag-name>
<tag-desc
>метод HTTP
</tag-desc>

</list>
</para>

<para>
<literal>callback</literal> получает
объект ответа подзапроса с методами и свойствами,
идентичными родительскому объекту запроса.
</para>
</tag-desc>

</list>
</para>

</section>

</section>


<section id="stream" name="Stream">

<para>
Объект <literal>stream</literal> доступен только в
модуле
<link doc="../stream/ngx_stream_js_module.xml">ngx_stream_js_module</link>.
Все строки в объекте <literal>stream</literal> являются
<link id="strings">байтовыми строками</link>.
</para>


<section id="stream_session" name="Сессия">

<para>
<list type="tag">

<tag-name><literal>s.remoteAddress</literal></tag-name>
<tag-desc>
адрес клиента, только чтение
</tag-desc>

<tag-name><literal>s.eof</literal></tag-name>
<tag-desc>
логическое свойство,
true, если текущий буфер является последним буфером,
только чтение
</tag-desc>

<tag-name><literal>s.fromUpstream</literal></tag-name>
<tag-desc>
логическое свойство,
true, если текущий буфер является буфером от проксируемого сервера к клиенту,
только чтение
</tag-desc>

<tag-name><literal>s.buffer</literal></tag-name>
<tag-desc>
текущий буфер, доступен для записи
</tag-desc>

<tag-name><literal>s.variables{}</literal></tag-name>
<tag-desc>
объект переменных nginx, только чтение
</tag-desc>

<tag-name><literal>s.OK</literal></tag-name>
<tag-desc>
код <literal>OK</literal>
</tag-desc>

<tag-name><literal>s.DECLINED</literal></tag-name>
<tag-desc>
код <literal>DECLINED</literal>
</tag-desc>

<tag-name><literal>s.AGAIN</literal></tag-name>
<tag-desc>
код <literal>AGAIN</literal>
</tag-desc>

<tag-name><literal>s.ERROR</literal></tag-name>
<tag-desc>
код <literal>ERROR</literal>
</tag-desc>

<tag-name><literal>s.ABORT</literal></tag-name>
<tag-desc>
код <literal>ABORT</literal>
</tag-desc>

<tag-name><literal>s.log(<value>строка</value>)</literal></tag-name>
<tag-desc>
записывает отправленную <value>строку</value> в лог-файл ошибок
на уровне лога <literal>info</literal>
</tag-desc>

<tag-name><literal>s.warn(<value>строка</value>)</literal></tag-name>
<tag-desc>
записывает отправленную <literal>строку</literal> в лог-файл ошибок
на уровне лога <literal>warning</literal>
</tag-desc>

<tag-name><literal>s.error(<value>строка</value>)</literal></tag-name>
<tag-desc>
записывает отправленную <literal>строку</literal> в лог-файл ошибок
на уровне лога <literal>error</literal>
</tag-desc>

</list>
</para>

</section>

</section>

</article>

